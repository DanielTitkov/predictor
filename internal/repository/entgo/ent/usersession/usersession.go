// Code generated by entc, DO NOT EDIT.

package usersession

import (
	"time"
)

const (
	// Label holds the string label denoting the usersession type in the database.
	Label = "user_session"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCreateTime holds the string denoting the create_time field in the database.
	FieldCreateTime = "create_time"
	// FieldUpdateTime holds the string denoting the update_time field in the database.
	FieldUpdateTime = "update_time"
	// FieldSid holds the string denoting the sid field in the database.
	FieldSid = "sid"
	// FieldIP holds the string denoting the ip field in the database.
	FieldIP = "ip"
	// FieldUserAgent holds the string denoting the user_agent field in the database.
	FieldUserAgent = "user_agent"
	// FieldLastActivity holds the string denoting the last_activity field in the database.
	FieldLastActivity = "last_activity"
	// FieldMeta holds the string denoting the meta field in the database.
	FieldMeta = "meta"
	// EdgeUser holds the string denoting the user edge name in mutations.
	EdgeUser = "user"
	// Table holds the table name of the usersession in the database.
	Table = "user_sessions"
	// UserTable is the table that holds the user relation/edge.
	UserTable = "user_sessions"
	// UserInverseTable is the table name for the User entity.
	// It exists in this package in order to avoid circular dependency with the "user" package.
	UserInverseTable = "users"
	// UserColumn is the table column denoting the user relation/edge.
	UserColumn = "user_sessions"
)

// Columns holds all SQL columns for usersession fields.
var Columns = []string{
	FieldID,
	FieldCreateTime,
	FieldUpdateTime,
	FieldSid,
	FieldIP,
	FieldUserAgent,
	FieldLastActivity,
	FieldMeta,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "user_sessions"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"user_sessions",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreateTime holds the default value on creation for the "create_time" field.
	DefaultCreateTime func() time.Time
	// DefaultUpdateTime holds the default value on creation for the "update_time" field.
	DefaultUpdateTime func() time.Time
	// UpdateDefaultUpdateTime holds the default value on update for the "update_time" field.
	UpdateDefaultUpdateTime func() time.Time
	// SidValidator is a validator for the "sid" field. It is called by the builders before save.
	SidValidator func(string) error
	// DefaultLastActivity holds the default value on creation for the "last_activity" field.
	DefaultLastActivity func() time.Time
)
